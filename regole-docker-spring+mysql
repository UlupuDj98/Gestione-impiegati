Comandi utilizzati per dockerizzare un applicazione springboot con mysql

docker pull mysql
//scarica l immagine di mysql

docker images
//visualizza le immagini

docker run -d -p 3308:3306 --name mysql-docker  --env=MYSQL_ROOT_PASSWORD=root  --env=MYSQL_PASSWORD=mypassword --env="MYSQL_DATABASE=employeesdb_docker" mysql 
//fa partire un container con questi parametri

docker container ls
//vediamo i container

docker exec -it mysql-docker bash
//entriamo nella shell del container mysql

ls
//vediamo il suo interno

mysql -uroot -proot
//logghiamo

SHOW DATABASES;
(da scrivere esattamente cosi)
//vediamo i db presenti


ora creare un file all interno della directory del programma springboot
lo chiamiamo Docker

inseriamo:

FROM openjdk:17-jdk-alpine
ADD target/Employees-project-0.0.1-SNAPSHOT.jar app.jar
ENTRYPOINT ["java","-jar","/app.jar"]
//vicino target il nome dell applicazione springboot (artifact)
//diamo la versione di jdk , creiamo il jar che ci servira per eseguirlo



(Ora fare l exit dal container mysql ovviamente)

andare nell application.properties

mettere user e password del db del container
al posto di localhost il nome del container
al posto del db il db del container

eseguire nella cartella radice
mvn clean install -DskipTests
//viene cosi creato il file .jar
//con il build pulisce dalle installazioni precedenti con DskipTests salta i test e genera direttamente il jar

docker build -t employee-image .
//crea un immagine docker , il -t gli da un nome , il . e la dir corrente
//grazie al dockerfile

docker run -t --link mysql-docker:mysql -p 8080:8080 employee-image
//runna un container , -t serve ad assegnargli un terminale interattivo
// --link collega al container parametro , assegna la porta sul quale e' disponibile il servizio , specifica l immagine da cui runnare il contenitore

Quando lo avviero la prossima volta dovro eseguire solo questi comandi nella cartella radice
docker run --name mysql-docker -e MYSQL_ROOT_PASSWORD=root -d mysql
docker run -t --link mysql-docker:mysql -p 8080:8080 employee-image
andare sulla 8080 di localhost

per stoppare i container 
docker ps
docker stop <pid>
Funziona!
